<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Diffumist Box</title>
  
  <subtitle>只是一个 Box 而已</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://diffumist.github.io/"/>
  <updated>2020-05-14T16:00:00.000Z</updated>
  <id>https://diffumist.github.io/</id>
  
  <author>
    <name>Diffumist</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WSL2 踩坑简单记录</title>
    <link href="https://diffumist.github.io/posts/WSL2-config-easy/"/>
    <id>https://diffumist.github.io/posts/WSL2-config-easy/</id>
    <published>2020-05-14T16:00:00.000Z</published>
    <updated>2020-05-14T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A WSL </p></blockquote><a id="more"></a><p>M$ 在 WSL2 采用了 Hyper-V ，原先的 rootfs 变成了 vhdx ，Docker 支持，文件 I/O 也提高了，和普通虚拟机相比还拥有飞快的启动速度，配合 Windows Terminal 和 Vscode remote 可以说是神器，不过由于 Hyper-V 等原因还是有一些坑需要解决</p><h2 id="检查-WSL-版本（WSL-1-和-2-支持互相转换"><a href="#检查-WSL-版本（WSL-1-和-2-支持互相转换" class="headerlink" title="检查 WSL 版本（WSL 1 和 2 支持互相转换"></a>检查 WSL 版本（WSL 1 和 2 支持互相转换</h2>  <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl -<span class="literal">-list</span> -<span class="literal">-verbose</span></span><br></pre></td></tr></table></figure><p>  <img src="https://cdn.misanzhiwu.top/2020/05/15/6530d2ff73cee.png" alt=""></p><h2 id="关于-systemd-支持"><a href="#关于-systemd-支持" class="headerlink" title="关于 systemd 支持"></a>关于 systemd 支持</h2><ul><li><p>WSL 无论是 1 还是 2 本身不支持 systemd，但有 WSL2 的第三方实现 Genie ，从而使用守护进程等操作</p><p><a href="https://github.com/arkane-systems/genie" target="_blank" rel="noopener">https://github.com/arkane-systems/genie</a></p></li></ul><h2 id="WSL2-的代理设置"><a href="#WSL2-的代理设置" class="headerlink" title="WSL2 的代理设置"></a>WSL2 的代理设置</h2><ul><li><p>WSL2 是使用 Hyper-V 虚拟机实现的，不能跟 Windows 共享同一个 localhost ，且重启 ip 都会变化</p></li><li><p>自行安装 proxychain-ng 后，向 shell 的配置文件（如 <code>.bashrc，.zshrc，.fishrc</code>等）添加以下命令（端口自行修改）</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export WIN_IP=`cat /etc/resolv.conf | grep nameserver | awk '&#123;print $2&#125;'`</span><br><span class="line">cp -f /etc/proxychains.conf ~/.proxychains.conf</span><br><span class="line">sed -i '/\[ProxyList\]/,$d' ~/.proxychains.conf</span><br><span class="line">sed -i '/\[http]/,$d' ~/.gitconfig</span><br><span class="line">echo -e '[http]\nproxy=socks5://'$&#123;WIN_IP&#125;':7891\n[https]\nproxy=socks5://'$&#123;WIN_IP&#125;':7891' &gt;&gt; ~/.gitconfig</span><br><span class="line">sed -i '/socks5.*/d' ~/.curlrc</span><br><span class="line">echo 'socks5='$&#123;WIN_IP&#125;':7891' &gt;&gt; ~/.curlrc</span><br><span class="line">echo -e '[ProxyList]\nsocks5 '$&#123;WIN_IP&#125;' 7891' &gt;&gt; ~/.proxychains.conf</span><br><span class="line">alias pc='proxychains4 -q -f ~/.proxychains.conf'</span><br></pre></td></tr></table></figure><blockquote><p>基于 <a href="https://www.cnblogs.com/zsmumu/p/12416159.html" target="_blank" rel="noopener">https://www.cnblogs.com/zsmumu/p/12416159.html</a> 修改</p></blockquote></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>虽然 WSL2 本身 I/O 得到提升但跨系统 I/O 变差，可以在跨系统 I/O 时切换到 WSL1</li><li>从资源管理器访问 WSL 文件，地址栏输入 <code>\\wsl$\</code> ，在 Windows 19603 及以后版本已经集成在资源管理器中</li><li><a href="https://www.virtualbox.org/wiki/Changelog-6.0" target="_blank" rel="noopener">VirtualBox</a> 和 <a href="https://blogs.vmware.com/workstation/2020/01/vmware-workstation-tech-preview-20h1.html" target="_blank" rel="noopener">VMware</a> 都发布了支持 Hyper-V 和 WSL2 的版本 </li><li>LxRunOffline 不支持操作 WSL2 需要先转换为 WSL1</li><li>进行系统全量备份时切换为 WSL 1 ，因原先的 rootfs 变成了 vhdx ，加之 LxRunOffline 还不支持备份还原 WSL2 容易丢失 WSL（</li></ul><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><ul><li>M$ 在 Build 2020 全球开发者大会上，发布了 Windows Terminal 1.0 正式版，包管理器 winget 的预览版，WSL2 也将很快支持 GPU 和 Linux GUI，Windows 10：可能是对新手最友好的 Linux 发行版？</li><li>Windows 的开发环境在不断改善了，scoop 包管理环境变量 + WSL + Terminal 确实有些舒适</li><li>当然 WSL 替代不了双系统，某些时候 WSL 的问题可能更多</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;A WSL &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://diffumist.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Linux" scheme="https://diffumist.github.io/tags/Linux/"/>
    
      <category term="WSL" scheme="https://diffumist.github.io/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>青年大学习的特殊姿势水平</title>
    <link href="https://diffumist.github.io/posts/leeks-learn-patch/"/>
    <id>https://diffumist.github.io/posts/leeks-learn-patch/</id>
    <published>2020-05-02T16:00:00.000Z</published>
    <updated>2020-05-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文章仅限“<strong>学习</strong>”目的，请勿用作其他用途（逃</p><a id="more"></a><blockquote><p>青年大学习算是学习强国的低配版，定期观看一些视频“学习”，虽然时间不长，但是没有进度条确实引起不适，因此网络上也有一些操作来亮出进度条，iOS有状态栏进度条，Android也可通过分屏来调用微信的视频播放组件来曲线救国。这里在此不再赘述。这里试图从代码上探讨一些特殊的姿势水平。</p></blockquote><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><p><code>Chrome Dev Tools</code></p><h1 id="槽点"><a href="#槽点" class="headerlink" title="槽点"></a>槽点</h1><p>所有判分逻辑全在前端完成，而且除视频外基本上全是图片，进入页面即加载全部资源，结束页面也是一个静态的图片资源，除此之外2020年了还是 <code>HTTP</code> ，</p><img src="/img/old/303c0728c7d04.png" style="zoom:50%;" /><p>由 JavaScript 来控制播放，直接写在 script 标签中，参考代码，在 console 输入两句 js 就可以实现跳过并显示完成页面</p><img src="/img/old/d5222f95a028e.png" style="zoom:50%;" /><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'.section3'</span>).addClass(<span class="string">'topindex1'</span>);</span><br><span class="line">$(<span class="string">'.section4,#Cvideo'</span>).hide();</span><br></pre></td></tr></table></figure><ul><li><p>在微信中可以用 tbs 的 vConsole 来输入（iOS不支持</p></li><li><p>微信打开 <a href="http://debugmm.qq.com/?forcex5=true" target="_blank" rel="noopener">http://debugmm.qq.com/?forcex5=true</a> 以强制开启 X5 内核</p></li><li><p>打开 <a href="http://debugx5.qq.com/" target="_blank" rel="noopener">http://debugx5.qq.com</a> 打开下面<code>vConsole调试功能</code>一项，就可以调试了 </p></li></ul><img src="/img/old/6819a3db69b19.jpg" style="zoom:50%;" /><ul><li>回到青年大学习，点击左下角 vConsole 在 command 输入以下代码，点击OK</li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'.section3'</span>).addClass(<span class="string">'topindex1'</span>);</span><br><span class="line">$(<span class="string">'.section4,#Cvideo'</span>).hide();</span><br><span class="line">__vconsole.style.display=<span class="string">"none"</span>;</span><br></pre></td></tr></table></figure><img src="/img/old/5b50cd19bff29.jpg" style="zoom: 33%;" /><h1 id="此外"><a href="#此外" class="headerlink" title="此外"></a>此外</h1><p>值得怀疑的一点是（JS小白），这个界面没有将视频播放和做题记录上传服务器，个人信息在之前填写信息表后就已经上传到了服务器，尝试在答题界面抓了一下包，发现是一些中间加载的视频资源</p><p>也就是说<strong>根本不需要跳过</strong></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://hefang.link/article/how-to-debug-in-wechat-webview.html" target="_blank" rel="noopener">https://hefang.link/article/how-to-debug-in-wechat-webview.html</a></li><li><a href="https://developers.google.com/web/tools/chrome-devtools/remote-debugging?hl=zh-cn" target="_blank" rel="noopener">https://developers.google.com/web/tools/chrome-devtools/remote-debugging?hl=zh-cn</a></li><li><a href="https://ringotc.github.io/2019/10/15/qndaxuexi/" target="_blank" rel="noopener">https://ringotc.github.io/2019/10/15/qndaxuexi/</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;本文章仅限“&lt;strong&gt;学习&lt;/strong&gt;”目的，请勿用作其他用途（逃&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://diffumist.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="JavaScript" scheme="https://diffumist.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>音乐流媒体服务的碎碎念</title>
    <link href="https://diffumist.github.io/posts/posts/music-platform-thoughts/"/>
    <id>https://diffumist.github.io/posts/posts/music-platform-thoughts/</id>
    <published>2020-05-02T16:00:00.000Z</published>
    <updated>2020-05-02T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>我开始只是一个重度网易云用户，在远古时期“该歌曲因为版权原因暂时无法播放”这个问题使用 <a href="https://github.com/nondanee/UnblockNeteaseMusic" target="_blank" rel="noopener">UnblockNeteaseMusic</a> 勉强还可以解决，不过由于一些原因确实不是长久之计，加之现在网易歌曲没有版权之后会直接在歌单消失，种种原因有让我弃坑的想法，尝试使用了 Spotify 和 Apple music 几个月后于是就有了这篇短文。</p></blockquote><a id="more"></a><h1 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h1><ul><li><p>国产音乐服务更像是一款社交软件而非听歌，不论是做社交的老大哥腾讯还是网易都有种这样的感觉，相反国外的一些服务如 Spotify 或 Apple music 则专注于听歌上，很少出现<strong>小红点</strong>，不过对于用惯国内服务的人来说需要一定时间适应，不恰当的来说相当于类原生和国产 UI 的差距。</p><blockquote><p>别忘了，国产 UI 是有广告的。</p></blockquote></li><li><p>曲库方面，由于不同的人听歌口味不同，加之国外对于版权意识更强（不同的国家地区曲库并不完全相同）,严格来说 Spotify 虽然具有庞大的曲库，但对于某些歌曲还是需要和其他平台搭配使用</p></li><li><p>优秀的曲库是以付费代价而实现的（网易除外，你可能会发现充了钱也强大不了），Spotify 美区达到 14.9 美元/ 102.5 人民币（觉得贵可以合租家庭组），而 Apple music价格则向国内平台看齐，甚至还有edu验证后每个月 5 块钱.</p><blockquote><p>当年用盗版欠下的，总有一天要还的（逃</p></blockquote></li><li><p>Android 和 Windows 用户不建议使用 Apple music / iTunes，AM 在 Android 和 Windows 的速度让我一次次怀疑网络问题，不论代理与否都是一个速度，严重怀疑Apple在非 iOS/Mac 上推出这个应用就是为了劝你购买他家的硬件的。</p><blockquote><p>由于 Apple music 服务速度过慢，以下评价中 Apple music 被开除 （</p></blockquote></li><li><p>Spotify 的推荐算法是坠吼的，当年只了解网易的算法比腾讯强，最近才发现 Spotify 的推荐算法更强。</p><blockquote><p>机器算法推荐也就图一乐，真实情况是<strong>游戏/电影/动漫原生曲</strong></p></blockquote></li><li><p>前面也提到了，Spotify 的客户端在功能上相比于国内软件没有太多优势，缺少歌词、听歌识曲等功能（日区部分有歌词）但是在多设备支持上强于国产应用，可以仅借助网络的情况下方便的串流到其他非蓝牙设备。</p><p><img src="/img/old/ed1ceab8016b4.png" alt=""></p><blockquote><p>强烈建议使用 Spotify 增强工具 <a href="https://github.com/khanhas/spicetify-cli" target="_blank" rel="noopener">Spicetify</a> </p></blockquote></li></ul><h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>国产和国外音乐流媒体平台各有所长，建议配合食用，国外和国内各持一个就好，毕竟都比较反感国内平台因为版权原因造成的割据混战局面。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;我开始只是一个重度网易云用户，在远古时期“该歌曲因为版权原因暂时无法播放”这个问题使用 &lt;a href=&quot;https://github.com/nondanee/UnblockNeteaseMusic&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UnblockNeteaseMusic&lt;/a&gt; 勉强还可以解决，不过由于一些原因确实不是长久之计，加之现在网易歌曲没有版权之后会直接在歌单消失，种种原因有让我弃坑的想法，尝试使用了 Spotify 和 Apple music 几个月后于是就有了这篇短文。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="https://diffumist.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="music" scheme="https://diffumist.github.io/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>净化 Google</title>
    <link href="https://diffumist.github.io/posts/clean-google/"/>
    <id>https://diffumist.github.io/posts/clean-google/</id>
    <published>2020-04-19T16:00:00.000Z</published>
    <updated>2020-04-19T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近内容农场有些猖狂，点名批评 <a href="https://www.v2ex.com/t/663593" target="_blank" rel="noopener">链接</a></p></blockquote><a id="more"></a><h1 id="内容农场是什么"><a href="#内容农场是什么" class="headerlink" title="内容农场是什么"></a>内容农场是什么</h1><blockquote><p>参见<a href="[https://zh.wikipedia.org/wiki/%E5%85%A7%E5%AE%B9%E8%BE%B2%E5%A0%B4](https://zh.wikipedia.org/wiki/內容農場)">Wiki</a></p></blockquote><p>内容农场是为赚取广告收益而不择手段的网站，他们会雇用写手或编写程序四处抄袭、剪贴、拼凑出大量品质不稳定的网络文章。他们用标题吸引阅读，同时以人工和机器堆砌热门关键词欺骗搜索引擎，久之搜索结果前部分塞满了他们的垃圾，真正有质量的相关资讯则被埋没</p><p>内容农场对创作者有害，因为他们盗文、盗译、盗图，且不附出处，使真正投注心力的原创者得不到应有报酬</p><p>内容农场对阅读者有害，因为它们发布的内容粗制滥造、缺乏求证，甚至自行脑补、无中生有，内容错误也不负责，是谣言的温床</p><p>抵制内容农场的唯一做法是不阅读、不点链接、不点赞、不分享，不要让他们赚到广告收益、网站流量及搜寻引擎排名。然而内容农场往往不易辨识，有时难免点错，网页打开才发现中计</p><blockquote><p>内容农场是比百度营销号相似但更过分的网站，通过干扰搜索引擎 SEO 牟利，其中 Google 受影响最大（瘦死的骆驼比马大，换 Baidu 是不可能的</p></blockquote><h1 id="屏蔽手段"><a href="#屏蔽手段" class="headerlink" title="屏蔽手段"></a>屏蔽手段</h1><h2 id="浏览器拓展"><a href="#浏览器拓展" class="headerlink" title="浏览器拓展"></a>浏览器拓展</h2><p><strong>封锁内容农场</strong>   <a href="https://chrome.google.com/webstore/detail/content-farm-terminator/lcghoajegeldpfkfaejegfobkapnemjl?hl=zh-CN" target="_blank" rel="noopener">Chrome</a>  <a href="https://addons.mozilla.org/zh-CN/firefox/addon/content-farm-terminator/" target="_blank" rel="noopener">Firefox</a></p><p>这个拓展可以对所有页面链接进行匹配，并对内容农场链接标红并警告</p><p>如果想要<strong>在搜索结果中直接屏蔽某网站</strong>可以使用</p><p><strong>uBlacklist</strong> <a href="https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe" target="_blank" rel="noopener">Chrome </a> <a href="https://addons.mozilla.org/en-US/firefox/addon/ublacklist/" target="_blank" rel="noopener">Firefox</a>  </p><p>可以使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noopener">正则表达式</a></p><p>这是我的屏蔽列表，仅供参考（</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;yq\.aliyun\.com&#x2F;</span><br><span class="line">&#x2F;cloud\.tencent\.com\&#x2F;developer&#x2F;</span><br><span class="line">&#x2F;.+\.mz6\.net&#x2F;</span><br><span class="line">&#x2F;.+\.lanzhuyangshengwang\.com&#x2F;</span><br><span class="line">&#x2F;.+\.zhuanzhi\.ai\&#x2F;document&#x2F;</span><br><span class="line">*:&#x2F;&#x2F;*.voidcc.com&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.kknews.cc&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.codeday.me&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.voidcn.com&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.codenong.com&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.helplib.com&#x2F;*</span><br><span class="line">*:&#x2F;&#x2F;*.jishuwen.com&#x2F;*</span><br></pre></td></tr></table></figure><p>可以配合订阅源使用 <a href="https://github.com/YeSilin/uBlacklist" target="_blank" rel="noopener">https://github.com/YeSilin/uBlacklist</a><br><a href="https://github.com/cobaltdisco/Google-Chinese-Results-Blocklist/" target="_blank" rel="noopener">https://github.com/cobaltdisco/Google-Chinese-Results-Blocklist/</a></p><h2 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h2><p>当然不用浏览器拓展和脚本的话</p><p>目前最有效的方式有两种, 要么屏蔽简中只用繁体, 要么直接英文搜索，看来 Google 是不打算维护简体中文的搜索结果了，毕竟都不能访问</p><p>也可以使用其他搜索引擎比如 Duckduckgo</p><h1 id="一些看法"><a href="#一些看法" class="headerlink" title="一些看法"></a>一些看法</h1><p>我认为简中互联网的缺点有二，一是过于敏感的审查，二是营销号的泛滥，互联网时代是一个信息爆炸的时代，但是也让有价值信息的获取门槛变高了，即使是有价值的信息，可能会因为<code>****</code>而得到404的结果</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近内容农场有些猖狂，点名批评 &lt;a href=&quot;https://www.v2ex.com/t/663593&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="杂谈" scheme="https://diffumist.github.io/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="Chrome" scheme="https://diffumist.github.io/tags/Chrome/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的人脸识别登录</title>
    <link href="https://diffumist.github.io/posts/Linux-face/"/>
    <id>https://diffumist.github.io/posts/Linux-face/</id>
    <published>2020-04-10T16:00:00.000Z</published>
    <updated>2020-04-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Howdy 为 Linux 提供了 Windows Hello™ 风格的身份验证。<a id="more"></a>使用 IR 摄像头，结合面部识别技术来证明你的身份，配合 PAM 可以简单实现 sudo ,system-auth, lockscreen 等无密码验证，下面说一下在 Arch 的简单配置，不使用 Arch 系的建议左转 GitHub <a href="https://github.com/boltgolt/howdy" target="_blank" rel="noopener">https://github.com/boltgolt/howdy</a> 或者加入我们 Arch 邪教 (不是<br>什么，你说你是 Windows 用户？那 WSL 也要记得装 <a href="https://github.com/yuk7/ArchWSL/releases" target="_blank" rel="noopener">Arch</a> 哦（逃</p><blockquote><p>当然，少输密码一时爽，<code>rm</code>火葬场，建议先写一个<code>alias</code>防止出现意外“故事” (</p></blockquote><p>Howdy 只能实现 2D 人脸识别，无法实现 Windows Hello 的生物识别，所以对于注重安全性的不建议安装</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>网络条件好的话可以直接 yay 一把梭，由于 Sources 是 GitHub 所以无法使用 tuna 镜像源加速</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S howdy</span><br></pre></td></tr></table></figure><p>网络条件不好的话可以手动下载编译</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -G package_name</span><br></pre></td></tr></table></figure><p>下面是需要编译的几个应用包</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pam-python                       </span><br><span class="line">python-dlib               </span><br><span class="line">python-face_recognition_models  </span><br><span class="line">python-face_recognition     </span><br><span class="line">howdy</span><br></pre></td></tr></table></figure><p>打开 PKGBUILD 可以找到下载地址，手动下载完毕后丢进文件夹，用相对位置替换即可，接着</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">makepkg    //编译生成安装文件</span><br><span class="line">yay -U package_name   //文件名自行替换</span><br></pre></td></tr></table></figure><p>安装完毕</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Howdy-配置"><a href="#Howdy-配置" class="headerlink" title="Howdy 配置"></a>Howdy 配置</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo howdy config</span><br></pre></td></tr></table></figure><p>添加 IR 摄像头，修改device_path 为</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">device_path = /dev/video0</span><br></pre></td></tr></table></figure><p>添加人脸</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo howdy add</span><br></pre></td></tr></table></figure><h2 id="PAM-配置"><a href="#PAM-配置" class="headerlink" title="PAM 配置"></a>PAM 配置</h2><p>为了正常调用 Howdy 我们先了解一下 Linux 的身份验证模块</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /etc/pam.d/</span><br></pre></td></tr></table></figure><p>这是 Linux 可插拔式身份验证模块(PAM)的配置文件，sudo ，lockscreen 等身份验证都依赖于此模块</p><blockquote><p><a href="https://wiki.archlinux.org/index.php/PAM" target="_blank" rel="noopener">PAM</a>提供了一种开发程序的方法，可以独立于认证方案之外。这些程序需要在运行时附加 “认证模块 “才能工作。哪些认证模块要附加到哪个认证模块取决于本地系统设置，由本地系统管理员自行决定。</p></blockquote><p>为了使 PAM 能成功调用 Howdy 需要加入下面一条更改：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">auth sufficient pam_python.so /lib/security/howdy/pam.py</span><br></pre></td></tr></table></figure><p>例如实现 sudo 命令时调用 Howdy </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> PAM-1.0</span></span><br><span class="line"></span><br><span class="line">auth    sufficient pam_python.so /lib/security/howdy/pam.py</span><br><span class="line">auth    include    system-auth</span><br><span class="line">account include    system-auth</span><br><span class="line">session include    system-auth</span><br></pre></td></tr></table></figure><p><strong>安全提示：由于默认安装下 PAM 存在配置文件的链接问题，即默认配置下 PAM 文件存在优先级，建议不要额外修改 PAM 配置文件，例如<code>sshd</code>，</strong>下面是一个简单的示例</p><p>login -&gt; system-local-login -&gt; system-login -&gt; system-auth<br>sshd -&gt; system-remote-login -&gt; system-login -&gt; system-auth</p><p>由于 Linux 桌面环境比较丰富，若想实现在锁屏下登录，可以修改相应的 PAM 配置文件<br>例如 KDE 的身份验证：<code>sddm</code></p><p>其他桌面环境可自行查找或验证</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://wiki.archlinux.org/index.php/Howdy" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Howdy</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Howdy 为 Linux 提供了 Windows Hello™ 风格的身份验证。
    
    </summary>
    
    
      <category term="技术" scheme="https://diffumist.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="https://diffumist.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>尝试在 Win 下使用 KDE connect</title>
    <link href="https://diffumist.github.io/posts/KDE-connect-win/"/>
    <id>https://diffumist.github.io/posts/KDE-connect-win/</id>
    <published>2020-03-31T16:00:00.000Z</published>
    <updated>2020-03-31T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于KDE-Connect"><a href="#关于KDE-Connect" class="headerlink" title="关于KDE Connect"></a>关于KDE Connect</h1><blockquote><p>先不负责任的复制粘贴（（（</p></blockquote><p>KDE Connect 是一个使您的所有设备能够相互通信的项目。以下是KDE Connect可以执行的一些操作：</p><a id="more"></a><ul><li>在台式计算机上接收电话通知并回复邮件</li><li>通过手机控制桌面上播放的音乐</li><li>将手机用作桌面的遥控器</li><li>从连接的设备在 PC 上运行预定义的命令</li><li>从桌面检查手机电池电量</li><li>拨打电话以帮助找到它</li><li>在设备之间共享文件和链接</li><li>从桌面浏览手机</li><li>通过手机控制桌面的音量</li></ul><p>KDE Connect 是一个跨平台项目，兼容 Linux Android macOS Windows ，在 Linux 下可以做到开箱即用，在 Windows 下需要一些操作才能使其正常运行，下面简单记录一下</p><h1 id="下载-KDE-Connect-for-Windows"><a href="#下载-KDE-Connect-for-Windows" class="headerlink" title="下载 KDE Connect for Windows"></a>下载 KDE Connect for Windows</h1><p>下载地址 ：<a href="https://binary-factory.kde.org/job/kdeconnect-kde_Release_win64/" target="_blank" rel="noopener">https://binary-factory.kde.org/job/kdeconnect-kde_Release_win64/</a></p><h1 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h1><p>先手动进入 KDE Connect 的安装目录</p><p>目前 KDE Connect 的 win 版本构建存在一些问题，手动运行 <code>kdeconnect-indicator.exe·</code>并不能正常使用，需要先运行<code>kdeconnectd.exe</code>，才能正常运行<code>kdeconnect-indicator.exe</code>，然而<code>kdeconnectd.exe</code>是一个控制台程序，尝试简单写了一个<code>VBScript</code> 后发现仍然会出现概率性连接失效问题，需要手动停止进程重新打开才能正常运行</p><h1 id="问题修复"><a href="#问题修复" class="headerlink" title="问题修复"></a>问题修复</h1><p>使用编辑器打开安装目录下 <code>\bin\data\dbus-1\services\org.kde.kdeconnect.service</code>将<code>Exec =</code>一行改为<code>Exec =kdeconnectd</code>后，保存重启 KDE Connect 即可</p><blockquote><p>原讨论地址： <a href="https://bugs.kde.org/show_bug.cgi?id=412665" target="_blank" rel="noopener">https://bugs.kde.org/show_bug.cgi?id=412665</a></p></blockquote><h1 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h1><ul><li><p>浏览设备文件时出现”需要新应用打开sftp链接”——安装 <a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">WinScp</a></p></li><li><p>浏览设备文件时出现无法连接问题——尝试在Android重新设置<code>插件设置</code>—<code>开放文件系统</code>—<code>添加存储位置</code>，并重新检查文件读写授权</p></li><li><p>剪切板：移动端 -&gt; PC端 不正常，即只能单方向——这个锅甩给 Android 10 和屑流氓应用厂商(有<a href="https://github.com/Kr328/Riru-ClipboardWhitelist-Magisk" target="_blank" rel="noopener">疑似解决方案</a>，需要 <code>Magisk</code> )</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于KDE-Connect&quot;&gt;&lt;a href=&quot;#关于KDE-Connect&quot; class=&quot;headerlink&quot; title=&quot;关于KDE Connect&quot;&gt;&lt;/a&gt;关于KDE Connect&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;先不负责任的复制粘贴（（（&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;KDE Connect 是一个使您的所有设备能够相互通信的项目。以下是KDE Connect可以执行的一些操作：&lt;/p&gt;
    
    </summary>
    
    
      <category term="开发" scheme="https://diffumist.github.io/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Linux" scheme="https://diffumist.github.io/tags/Linux/"/>
    
      <category term="KDE" scheme="https://diffumist.github.io/tags/KDE/"/>
    
  </entry>
  
  <entry>
    <title>Github 加速汇总</title>
    <link href="https://diffumist.github.io/posts/posts/Github-fast/"/>
    <id>https://diffumist.github.io/posts/posts/Github-fast/</id>
    <published>2020-01-22T16:00:00.000Z</published>
    <updated>2020-01-22T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一些让 Github 变快，<span class="heimu">想催人跑的技巧</span></p></blockquote><a id="more"></a><style type="text/css">.heimu { color: #000; background-color: #000; }.heimu:hover { color: #fff; }</style><h1 id="使用-Cloudflare-Workers-加速"><a href="#使用-Cloudflare-Workers-加速" class="headerlink" title="使用 Cloudflare Workers 加速"></a>使用 Cloudflare Workers 加速</h1><blockquote><p>虽然经常被黑减速 CDN (指国内，对于国外 VPS 是福音，不得不说，cf 真好用.jpg</p></blockquote><p>利用 Cloudflare Workers 对 github release、archive 以及项目文件进行加速，并且支持 clone，部署无需服务器且自带 cdn</p><p><a href="https://github.com/hunshcn/gh-proxy" target="_blank" rel="noopener">传送门</a><br><a href="https://github.diffumist.workers.dev/" target="_blank" rel="noopener">个人 Demo</a><br><a href="https://github.diffumist.workers.dev/" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Now%20on-Cloudflare%20Workers-f38020?logo=cloudflare&logoColor=f38020" alt="Now on Cloudflare Workers"></a></p><blockquote><p>SSH 无法使用此法加速，请转至下文</p></blockquote><h1 id="Jsdelivr-直接加速-repo-内文件"><a href="#Jsdelivr-直接加速-repo-内文件" class="headerlink" title="Jsdelivr 直接加速 repo 内文件"></a>Jsdelivr 直接加速 repo 内文件</h1><p> jsdelivr 可以直接访问 GitHub 仓库内文件<br>举个例子，例如 oh-my-zsh </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 原脚本</span></span><br><span class="line">sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 加速下载</span></span><br><span class="line">sh -c "$(curl -fsSL https://cdn.jsdelivr.net/gh/ohmyzsh/ohmyzsh@master/tools/install.sh)"</span><br></pre></td></tr></table></figure><p>即格式为<br><a href="https://cdn.jsdelivr.net/gh/用户名/仓库名@分支/文件及路径" target="_blank" rel="noopener">https://cdn.jsdelivr.net/gh/用户名/仓库名@分支/文件及路径</a><br>参考</p><ul><li><a href="https://github.com/jsdelivr/jsdelivr/blob/master/README.md" target="_blank" rel="noopener">https://github.com/jsdelivr/jsdelivr/blob/master/README.md</a></li></ul><h1 id="使用代理加速"><a href="#使用代理加速" class="headerlink" title="使用代理加速"></a>使用代理加速</h1><h2 id="HTTPS-代理"><a href="#HTTPS-代理" class="headerlink" title="HTTPS 代理"></a>HTTPS 代理</h2><p>git 命令并不会直接走全局代理，需要通过 git config 配置</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#  socks5 协议，1080 端口修改成自己的本地代理端口</span><br><span class="line">git config --global http.https:&#x2F;&#x2F;github.com.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080</span><br><span class="line">git config --global https.https:&#x2F;&#x2F;github.com.proxy socks5:&#x2F;&#x2F;127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>其他命令：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 查看所有配置</span><br><span class="line">git config -l</span><br><span class="line"># 重置代理设置</span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>也可手动修改<code>.gitconfig</code>文件</p><h2 id="针对-SSH-协议设置代理"><a href="#针对-SSH-协议设置代理" class="headerlink" title="针对 SSH 协议设置代理"></a>针对 SSH 协议设置代理</h2><p>修改 <code>~/.ssh/config</code> 文件，根据相应端口添加以下内容</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Host github.com *.github.com</span><br><span class="line">    ProxyCommand connect -H 127.0.0.1:7890 %h %p</span><br><span class="line">    HostName %h</span><br><span class="line">    Port 22</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile  ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">    IdentitiesOnly yes</span><br></pre></td></tr></table></figure><blockquote><p>有效性取决于代理速度</p></blockquote><h1 id="修改-hosts"><a href="#修改-hosts" class="headerlink" title="修改 hosts"></a>修改 hosts</h1><blockquote><p>属于 <del>49 入国军</del>治标不治本行为</p></blockquote><p>由于 DNS 地址存在时间有效性，修改 hosts 前请自行查询 GitHub hosts<br>以下为完整参考列表（仅供参考，可能已过时）</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># GitHub Start</span><br><span class="line">13.250.177.223 github.com</span><br><span class="line">59.24.3.173 gist.github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">151.101.228.133 raw.githubusercontent.com</span><br><span class="line">151.101.228.133 gist.githubusercontent.com</span><br><span class="line">151.101.228.133 cloud.githubusercontent.com</span><br><span class="line">151.101.228.133 camo.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars0.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars1.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars2.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars3.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars4.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars5.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars6.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars7.githubusercontent.com</span><br><span class="line">151.101.228.133 avatars8.githubusercontent.com</span><br><span class="line">185.199.110.154 github.githubassets.com</span><br><span class="line">174.36.196.242 github.global.ssl.fastly.net</span><br><span class="line"># GitHub End</span><br></pre></td></tr></table></figure><p>修改后刷新 DNS 缓存</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一些让 Github 变快，&lt;span class=&quot;heimu&quot;&gt;想催人跑的技巧&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://diffumist.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Github" scheme="https://diffumist.github.io/tags/Github/"/>
    
      <category term="Cloudflare" scheme="https://diffumist.github.io/tags/Cloudflare/"/>
    
  </entry>
  
</feed>
